


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Faiyaz Mostofa
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/14/2018
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal)
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   42 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   43 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   44 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   45 00000000         
   46 00000000         ;Variables that hold the maximum values 
   47 00000000 001864A8 
                       MAX_DELAY
                               EQU              0x1864A8    ;0x249700    ; The 
                                                            interval size of th
                                                            e delays
   48 00000000 00005E00 
                       BREATHE_DELAY_MAX
                               EQU              0x5E00      ; The delay require
                                                            d
   49 00000000         
   50 00000000                 IMPORT           TExaS_Init
   51 00000000                 IMPORT           SysTick_Init
   52 00000000                 IMPORT           SysTick_Wait
   53 00000000                 IMPORT           SysTick_Wait10ms
   54 00000000                 IMPORT           Debug_Init
   55 00000000         
   56 00000000                 THUMB
   57 00000000         ;------------Global Variables---------------------------
                       ----------------------------------------
   58 00000000                 AREA             DATA, ALIGN=2
   59 00000000         
   60 00000000         ;Blinking variables
   61 00000000 00 00 00 
              00       delay_inc
                               SPACE            4           ; how to increment 
                                                            the delays when we 



ARM Macro Assembler    Page 3 


                                                            need to change them
                                                             (1/5 of MAX_DELAY)
                                                            
   62 00000004 00 00 00 
              00       delay_off
                               SPACE            4           ; how long the LED 
                                                            will stay off (in c
                                                            ycles)
   63 00000008 00 00 00 
              00       delay_on
                               SPACE            4           ; how long the LED 
                                                            will stay on (in cy
                                                            cles)
   64 0000000C 00      prev_button_state
                               SPACE            1           ; captures whether 
                                                            a button has been r
                                                            eleased or pushed
   65 0000000D         
   66 0000000D                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   67 00000000                 THUMB
   68 00000000                 EXPORT           Start
   69 00000000         
   70 00000000         ;---------Main Code-------------------------------------
                       ----------------------------------------
   71 00000000         Start
   72 00000000         ; TExaS_Init sets bus clock at 80 MHz
   73 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   74 00000004 F7FF FFFE       BL               SysTick_Init ;
   75 00000008 F7FF FFFE       BL               Debug_Init  ;
   76 0000000C         
   77 0000000C         ; Port Initialization
   78 0000000C 4864            LDR              R0, =SYSCTL_RCGCGPIO_R ;
   79 0000000E 6801            LDR              R1, [R0]    ;
   80 00000010 F041 0130       ORR              R1, R1, #0x30 ;   Start up Port
                                                             F and Port E
   81 00000014 6001            STR              R1, [R0]    ;
   82 00000016 BF00            NOP                          ;
   83 00000018 BF00            NOP                          ;
   84 0000001A         ; Configure Port E
   85 0000001A 4862            LDR              R0, =GPIO_PORTE_DIR_R ;
   86 0000001C 6801            LDR              R1, [R0]    ;
   87 0000001E F041 0101       ORR              R1, R1, #0x01 ;    PE0 is set t
                                                            o output (LED)
   88 00000022 F021 0112       BIC              R1, R1, #0x12 ;    PE1,4 are se
                                                            t to input (buttons
                                                            )
   89 00000026 6001            STR              R1, [R0]    ;
   90 00000028 485F            LDR              R0, =GPIO_PORTE_AFSEL_R ;
   91 0000002A 6801            LDR              R1, [R0]    ;
   92 0000002C F04F 0100       MOV              R1, #0      ;      Disables the
                                                             "alternate functio
                                                            ns" in the port
   93 00000030 6001            STR              R1, [R0]    ;
   94 00000032 485E            LDR              R0, =GPIO_PORTE_DEN_R ;
   95 00000034 6801            LDR              R1, [R0]    ;
   96 00000036 F04F 01FF       MOV              R1, #0xFF   ;     1 means enabl
                                                            e digital I/O



ARM Macro Assembler    Page 4 


   97 0000003A 6001            STR              R1, [R0]    ;
   98 0000003C         ; Configure Port F
   99 0000003C 495C            LDR              R1, =GPIO_PORTF_LOCK_R ;  2) un
                                                            lock the lock regis
                                                            ter
  100 0000003E 485D            LDR              R0, =GPIO_LOCK_KEY ;   unlock G
                                                            PIO Port F Commit R
                                                            egister
  101 00000040 6008            STR              R0, [R1]    ;
  102 00000042 495D            LDR              R1, =GPIO_PORTF_CR_R ;    enabl
                                                            e commit for Port F
                                                            
  103 00000044 F04F 00FF       MOV              R0, #0xFF   ;               1 m
                                                            eans allow access
  104 00000048 6008            STR              R0, [R1]    ;
  105 0000004A 495C            LDR              R1, =GPIO_PORTF_DIR_R ;   5) se
                                                            t direction registe
                                                            r
  106 0000004C F04F 000E       MOV              R0,#0x0E    ;
  107 00000050 6008            STR              R0, [R1]    ;
  108 00000052 495B            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  109 00000054 F04F 0000       MOV              R0, #0      ;                  
                                                              0 means disable a
                                                            lternate function
  110 00000058 6008            STR              R0, [R1]    ;
  111 0000005A 495A            LDR              R1, =GPIO_PORTF_PUR_R ;     pul
                                                            l-up resistors for 
                                                            PF4,PF0
  112 0000005C F04F 0011       MOV              R0, #0x11   ;                 1
                                                            )enable for negativ
                                                            e logic
  113 00000060 6008            STR              R0, [R1]    ;
  114 00000062 4959            LDR              R1, =GPIO_PORTF_DEN_R ;     7) 
                                                            enable Port F digit
                                                            al port
  115 00000064 F04F 00FF       MOV              R0, #0xFF   ;                 1
                                                             means enable digit
                                                            al I/O
  116 00000068 6008            STR              R0, [R1]    ;
  117 0000006A         ; Setting up variables
  118 0000006A         Configure
  119 0000006A 4958            LDR              R1, =MAX_DELAY ;  
  120 0000006C F04F 0205       MOV              R2, #5      ;     
  121 00000070 FBB1 F2F2       UDIV             R2, R1, R2  ;  split the max de
                                                            lay into 5 equal se
                                                            ctions
  122 00000074 4956            LDR              R1, =delay_inc ;
  123 00000076 600A            STR              R2, [R1]    ;   delay_inc = (MA
                                                            X_DELAY / 5)
  124 00000078         
  125 00000078 4955            LDR              R1, =delay_inc ;
  126 0000007A 680A            LDR              R2, [R1]    ;
  127 0000007C F04F 0304       MOV              R3, #4      ;
  128 00000080 FB02 F203       MUL              R2, R2, R3  ; 
  129 00000084 4953            LDR              R1, =delay_off ; 
  130 00000086 600A            STR              R2, [R1]    ;   Default: the de
                                                            lay_off starts @ 4/



ARM Macro Assembler    Page 5 


                                                            5 of the MAX_DELAY
  131 00000088         
  132 00000088 4951            LDR              R1, =delay_inc ;
  133 0000008A 680A            LDR              R2, [R1]    ;
  134 0000008C 4952            LDR              R1, =delay_on ;
  135 0000008E 600A            STR              R2, [R1]    ;   Default: the de
                                                            lay_on on starts @ 
                                                            1/5 of the MAX_DELA
                                                            Y
  136 00000090         
  137 00000090 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  138 00000092         
  139 00000092         main_loop
  140 00000092         ; The main loop engine
  141 00000092 4952            LDR              R1, =GPIO_PORTF_DATA_R ;
  142 00000094 680A            LDR              R2, [R1]    ;
  143 00000096         
  144 00000096         ; If the button is pushed, Start breathing
  145 00000096 F002 0210       AND              R2, R2, #0x10 ;   Check whether
                                                             the button has bee
                                                            n pushed or not
  146 0000009A 2A00            CMP              R2, #0x00   ;
  147 0000009C D101            BNE              Blink_ifPushed ;  If SW1 is pus
                                                            hed, start the brea
                                                            thing
  148 0000009E F000 F835       BL               Breathe_Start ;
  149 000000A2         
  150 000000A2         Blink_ifPushed
  151 000000A2 494F            LDR              R1, =GPIO_PORTE_DATA_R ;
  152 000000A4 4A4F            LDR              R2, =prev_button_state ;
  153 000000A6 7812            LDRB             R2, [R2]    ;
  154 000000A8 680B            LDR              R3, [R1]    ;    <- R3 holds th
                                                            e data from the Por
                                                            tE data register
  155 000000AA F003 0302       AND              R3, R3, #0x02 ;   Check whether
                                                             the button has bee
                                                            n pushed or not
  156 000000AE 4293            CMP              R3, R2      ;     <- Check if t
                                                            he button is in the
                                                             same state as befo
                                                            re 
  157 000000B0 D01A            BEQ              Blink       ;
  158 000000B2 4A4C            LDR              R2, =prev_button_state ;
  159 000000B4 7013            STRB             R3, [R2]    ;
  160 000000B6         ; If the button is pushed, set PE4 to 1
  161 000000B6 2B00            CMP              R3, #0x00   ;   If the button i
                                                            s pushed
  162 000000B8 D100            BNE              Blink_incrementDuty ;
  163 000000BA E015            B                Blink       ;
  164 000000BC         Blink_incrementDuty
  165 000000BC         ; Incrementing the duty time
  166 000000BC 4A44            LDR              R2, =delay_inc ;
  167 000000BE 6812            LDR              R2, [R2]    ;    
  168 000000C0 4944            LDR              R1, =delay_off ;   
  169 000000C2 680B            LDR              R3, [R1]    ;    
  170 000000C4 EBA3 0302       SUB              R3, R3, R2  ;    Decrement the 
                                                            off time



ARM Macro Assembler    Page 6 


  171 000000C8 600B            STR              R3, [R1]    ;
  172 000000CA 4943            LDR              R1, =delay_on ;
  173 000000CC 680B            LDR              R3, [R1]    ;
  174 000000CE 4413            ADD              R3, R3, R2  ;    Increment the 
                                                            on time
  175 000000D0 600B            STR              R3, [R1]    ;
  176 000000D2         
  177 000000D2 4940            LDR              R1, =delay_off ;
  178 000000D4 680A            LDR              R2, [R1]    ;
  179 000000D6 2A00            CMP              R2, #0      ;
  180 000000D8 D506            BPL              Blink       ;    If the the off
                                                             time is < 0 (off <
                                                             0%, on > 100%), re
                                                            set the values to o
                                                            ff = 100%, on = 0%
  181 000000DA 4A3C            LDR              R2, =MAX_DELAY ;
  182 000000DC 493D            LDR              R1, =delay_off ;
  183 000000DE 600A            STR              R2, [R1]    ;
  184 000000E0 493D            LDR              R1, =delay_on ;
  185 000000E2 F04F 0200       MOV              R2, #0      ;     Reset the on 
                                                            time to 0 (light is
                                                             always off)
  186 000000E6 600A            STR              R2, [R1]    ;
  187 000000E8         
  188 000000E8         Blink
  189 000000E8         ; Turn off the light and wait
  190 000000E8 493D            LDR              R1, =GPIO_PORTE_DATA_R ;
  191 000000EA 680A            LDR              R2, [R1]    ;
  192 000000EC F022 0201       BIC              R2, #0x01   ;
  193 000000F0 600A            STR              R2, [R1]    ;
  194 000000F2 4A38            LDR              R2, =delay_off ;
  195 000000F4 6810            LDR              R0, [R2]    ;
  196 000000F6 F000 F848       BL               delay       ;   Delay the progr
                                                            am for a amount of 
                                                            time specified in R
                                                            7
  197 000000FA         ; Turn on the light and wait
  198 000000FA 680A            LDR              R2, [R1]    ;
  199 000000FC F042 0201       ORR              R2, #0x01   ;  
  200 00000100 600A            STR              R2, [R1]    ;
  201 00000102 4A35            LDR              R2, =delay_on ;
  202 00000104 6810            LDR              R0, [R2]    ;
  203 00000106 F000 F840       BL               delay       ;
  204 0000010A         
  205 0000010A E7C2            B                main_loop
  206 0000010C         ;-------------------------------------------------------
                       ----------------------------------------
  207 0000010C         Breathe_Start
  208 0000010C         ; a subroutine that handles all the breathing functional
                       ity by completly reworking everything
  209 0000010C B4FF            PUSH             {R0-R7}     ;
  210 0000010E E92D 4100       PUSH             {R8, LR}    ;
  211 00000112         
  212 00000112         ; Setting up variables
  213 00000112 4833            LDR              R0, =GPIO_PORTE_DATA_R ;
  214 00000114 F8DF 90C4       LDR              R9, =GPIO_PORTF_DATA_R ;
  215 00000118 F44F 42BC       LDR              R2, =BREATHE_DELAY_MAX ;
  216 0000011C F44F 73FA       MOV              R3, #500    ;
  217 00000120 FBB2 F4F3       UDIV             R4, R2, R3  ;   The increments 



ARM Macro Assembler    Page 7 


                                                            of the delay
  218 00000124 F102 0500       ADD              R5, R2, #0  ;    Default: off f
                                                            or 4/5 of 80Hz
  219 00000128 F04F 0600       MOV              R6, #0      ;    Default: on fo
                                                            r 1/5 of 80Hz
  220 0000012C F102 0700       ADD              R7, R2, #0  ;
  221 00000130         
  222 00000130         Breathe_loop
  223 00000130         ; The main loop engine
  224 00000130 F8D9 1000       LDR              R1, [R9]    ;    <- R1 holds th
                                                            e data from the dat
                                                            a register
  225 00000134         Breathe_ifPushed
  226 00000134         ; If the button is pushed, Stop breathing
  227 00000134 F001 0310       AND              R3, R1, #0x10 ;   Check whether
                                                             the button has bee
                                                            n pushed or not
  228 00000138 2B10            CMP              R3, #0x10   ;
  229 0000013A D100            BNE              Breathe_incrementDuty ;
  230 0000013C E021            B                Breathe_Stop ;
  231 0000013E         
  232 0000013E         Breathe_incrementDuty
  233 0000013E         ; Incrementing the duty time
  234 0000013E EBA5 0504       SUB              R5, R5, R4  ;    Decrement the 
                                                            off time
  235 00000142 4426            ADD              R6, R6, R4  ;    Increment the 
                                                            on time
  236 00000144 2D00            CMP              R5, #0      ;
  237 00000146 D402            BMI              Breathe_Verse ;
  238 00000148 D001            BEQ              Breathe_Verse ;     Check if we
                                                            've stopped or froz
                                                            e the delay of the 
                                                            light (either R5 or
                                                             R6 reach zero)
  239 0000014A 2E00            CMP              R6, #0      ;
  240 0000014C D506            BPL              Breathe     ;
  241 0000014E         Breathe_Verse
  242 0000014E F04F 33FF       MOV              R3, #-1     ;
  243 00000152 FB04 F403       MUL              R4, R4, R3  ;    Once we reach 
                                                            a maximum, down/up 
                                                            or up depending on 
                                                            the scenario
  244 00000156 EBA5 0504       SUB              R5, R5, R4  ;    Decrement the 
                                                            off time
  245 0000015A 4426            ADD              R6, R6, R4  ;    Increment the 
                                                            on time
  246 0000015C         Breathe
  247 0000015C         ; Turn off the light and wait
  248 0000015C F021 0101       BIC              R1, #0x01   ;  
  249 00000160 6001            STR              R1, [R0]    ;
  250 00000162 B403            PUSH             {R0, R1}    ;
  251 00000164 F105 0000       ADD              R0, R5, #0  ;
  252 00000168 F000 F80F       BL               delay       ;     Delay the pro
                                                            gram for a amount o
                                                            f time specified in
                                                             R7
  253 0000016C BC03            POP              {R0, R1}    ;
  254 0000016E         ; Turn on the light and wait
  255 0000016E F041 0101       ORR              R1, #0x01   ;  



ARM Macro Assembler    Page 8 


  256 00000172 6001            STR              R1, [R0]    ;
  257 00000174 B403            PUSH             {R0, R1}    ;
  258 00000176 F106 0000       ADD              R0, R6, #0  ;
  259 0000017A F000 F806       BL               delay       ;
  260 0000017E BC03            POP              {R0, R1}    ;
  261 00000180         
  262 00000180 E7D6            B                Breathe_loop
  263 00000182         
  264 00000182         Breathe_Stop
  265 00000182 E8BD 4100       POP              {R8,LR}     ;
  266 00000186 BCFF            POP              {R0-R7}     ;
  267 00000188         
  268 00000188 4770            BX               LR          ;
  269 0000018A         ;-------------------------------------------------------
                       ----------------------------------------
  270 0000018A         delay
  271 0000018A         ; a subroutine that loops using the value at R0
  272 0000018A B403            PUSH             {R0, R1}    ;
  273 0000018C F04F 0100       MOV              R1, #0      ;
  274 00000190         delayLoop
  275 00000190 4288            CMP              R0, R1      ;   Loop until temp
                                                            orary value R1 reac
                                                            hes R0
  276 00000192 D002            BEQ              delayDone   ;
  277 00000194 F101 0101       ADD              R1, R1, #1  ; 
  278 00000198 E7FA            B                delayLoop   ;
  279 0000019A         delayDone
  280 0000019A BC03            POP              {R0, R1}    ;
  281 0000019C 4770            BX               LR          ;
  282 0000019E         
  283 0000019E         
  284 0000019E         ;-------------------------------------------------------
                       ----------------------------------------
  285 0000019E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  286 000001A0                 END                          ; end of file
              400FE608 
              40024400 
              40024420 
              4002451C 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              40025420 
              40025510 
              4002551C 
              001864A8 
              00000000 
              00000000 
              00000000 
              400253FC 
              400243FC 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 58 in file main.s
   Uses
      None
Comment: DATA unused
delay_inc 00000000

Symbol: delay_inc
   Definitions
      At line 61 in file main.s
   Uses
      At line 122 in file main.s
      At line 125 in file main.s
      At line 132 in file main.s
      At line 166 in file main.s

delay_off 00000004

Symbol: delay_off
   Definitions
      At line 62 in file main.s
   Uses
      At line 129 in file main.s
      At line 168 in file main.s
      At line 177 in file main.s
      At line 182 in file main.s
      At line 194 in file main.s

delay_on 00000008

Symbol: delay_on
   Definitions
      At line 63 in file main.s
   Uses
      At line 134 in file main.s
      At line 172 in file main.s
      At line 184 in file main.s
      At line 201 in file main.s

prev_button_state 0000000C

Symbol: prev_button_state
   Definitions
      At line 64 in file main.s
   Uses
      At line 152 in file main.s
      At line 158 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 66 in file main.s
   Uses
      None
Comment: .text unused
Blink 000000E8

Symbol: Blink
   Definitions
      At line 188 in file main.s
   Uses
      At line 157 in file main.s
      At line 163 in file main.s
      At line 180 in file main.s

Blink_ifPushed 000000A2

Symbol: Blink_ifPushed
   Definitions
      At line 150 in file main.s
   Uses
      At line 147 in file main.s
Comment: Blink_ifPushed used once
Blink_incrementDuty 000000BC

Symbol: Blink_incrementDuty
   Definitions
      At line 164 in file main.s
   Uses
      At line 162 in file main.s
Comment: Blink_incrementDuty used once
Breathe 0000015C

Symbol: Breathe
   Definitions
      At line 246 in file main.s
   Uses
      At line 240 in file main.s
Comment: Breathe used once
Breathe_Start 0000010C

Symbol: Breathe_Start
   Definitions
      At line 207 in file main.s
   Uses
      At line 148 in file main.s
Comment: Breathe_Start used once
Breathe_Stop 00000182

Symbol: Breathe_Stop
   Definitions
      At line 264 in file main.s
   Uses
      At line 230 in file main.s
Comment: Breathe_Stop used once
Breathe_Verse 0000014E



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: Breathe_Verse
   Definitions
      At line 241 in file main.s
   Uses
      At line 237 in file main.s
      At line 238 in file main.s

Breathe_ifPushed 00000134

Symbol: Breathe_ifPushed
   Definitions
      At line 225 in file main.s
   Uses
      None
Comment: Breathe_ifPushed unused
Breathe_incrementDuty 0000013E

Symbol: Breathe_incrementDuty
   Definitions
      At line 232 in file main.s
   Uses
      At line 229 in file main.s
Comment: Breathe_incrementDuty used once
Breathe_loop 00000130

Symbol: Breathe_loop
   Definitions
      At line 222 in file main.s
   Uses
      At line 262 in file main.s
Comment: Breathe_loop used once
Configure 0000006A

Symbol: Configure
   Definitions
      At line 118 in file main.s
   Uses
      None
Comment: Configure unused
Start 00000000

Symbol: Start
   Definitions
      At line 71 in file main.s
   Uses
      At line 68 in file main.s
Comment: Start used once
delay 0000018A

Symbol: delay
   Definitions
      At line 270 in file main.s
   Uses
      At line 196 in file main.s
      At line 203 in file main.s
      At line 252 in file main.s
      At line 259 in file main.s




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

delayDone 0000019A

Symbol: delayDone
   Definitions
      At line 279 in file main.s
   Uses
      At line 276 in file main.s
Comment: delayDone used once
delayLoop 00000190

Symbol: delayLoop
   Definitions
      At line 274 in file main.s
   Uses
      At line 278 in file main.s
Comment: delayLoop used once
main_loop 00000092

Symbol: main_loop
   Definitions
      At line 139 in file main.s
   Uses
      At line 205 in file main.s
Comment: main_loop used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BREATHE_DELAY_MAX 00005E00

Symbol: BREATHE_DELAY_MAX
   Definitions
      At line 48 in file main.s
   Uses
      At line 215 in file main.s
Comment: BREATHE_DELAY_MAX used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 43 in file main.s
   Uses
      At line 100 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 90 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 151 in file main.s
      At line 190 in file main.s
      At line 213 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 94 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 108 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_CR_R 40025524



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 102 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 141 in file main.s
      At line 214 in file main.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 114 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 105 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 99 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 111 in file main.s
Comment: GPIO_PORTF_PUR_R used once
MAX_DELAY 001864A8

Symbol: MAX_DELAY
   Definitions
      At line 47 in file main.s
   Uses
      At line 119 in file main.s
      At line 181 in file main.s

SYSCTL_RCGCGPIO_R 400FE608




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 44 in file main.s
   Uses
      At line 78 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Debug_Init 00000000

Symbol: Debug_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 75 in file main.s
Comment: Debug_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 51 in file main.s
   Uses
      At line 74 in file main.s
Comment: SysTick_Init used once
SysTick_Wait 00000000

Symbol: SysTick_Wait
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: SysTick_Wait unused
SysTick_Wait10ms 00000000

Symbol: SysTick_Wait10ms
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: SysTick_Wait10ms unused
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 50 in file main.s
   Uses
      At line 73 in file main.s
Comment: TExaS_Init used once
5 symbols
375 symbols in table
