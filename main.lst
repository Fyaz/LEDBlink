


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Faiyaz Mostofa
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 2/14/2018
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal)
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE0 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 8H
                       z,
   15 00000000         ;      which is 8 times per second with a duty-cycle of 
                       20%.
   16 00000000         ;      Therefore, the LED is ON for (0.2*1/8)th of a sec
                       ond
   17 00000000         ;      and OFF for (0.8*1/8)th of a second.
   18 00000000         ;   3) When the button on (PE1) is pressed-and-released 
                       increase
   19 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   20 00000000         ;      press-and-release the duty cycle changes from 20%
                        to 40% to 60%
   21 00000000         ;      to 80% to 100%(ON) to 0%(Off) to 20% to 40% so on
                       
   22 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   23 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   24 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   25 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   26 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 8Hz.
   27 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   28 00000000         ;         cycle or reset to 20%.
   29 00000000         ;      TIP: debugging the breathing LED algorithm and fe
                       el on the simulator is impossible.
   30 00000000         ; PortE device registers
   31 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   32 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   33 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   34 00000000 4002451C 



ARM Macro Assembler    Page 2 


                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   35 00000000         ; PortF device registers
   36 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   37 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   38 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   39 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   42 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   43 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   44 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   45 00000000         ;Variables that hold the maximum values 
   46 00000000 001864A8 
                       MAX_DELAY
                               EQU              0x1864A8    ;0x249700    ; The 
                                                            interval size of th
                                                            e delays
   47 00000000 00005E00 
                       BREATHE_DELAY_MAX
                               EQU              0x5E00      ; The delay require
                                                            d
   48 00000000         
   49 00000000                 IMPORT           TExaS_Init
   50 00000000                 THUMB
   51 00000000                 AREA             DATA, ALIGN=2
   52 00000000         ;global variables go here
   53 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   54 00000000                 THUMB
   55 00000000                 EXPORT           Start
   56 00000000         
   57 00000000         ;RO = holds the location for the output register
   58 00000000         ;R1 = used to hold the data from the registers (will be 
                       used to edit data)
   59 00000000         ;R2 = Register that holds the value for the MAX_DELAY
   60 00000000         ;R3 = temporary variable (Ex: used in delay as increment
                       )
   61 00000000         ;R4 = contains the increments of the delay (1/5 of MAX_D
                       ELAY)



ARM Macro Assembler    Page 3 


   62 00000000         ;R5 = contains the current delay for off
   63 00000000         ;R6 = contains the current delay for on
   64 00000000         ;R7 = temporary variable mainly used for subroutine para
                       meters
   65 00000000         ;R8 = temporary variable (each bit keeps track of a diff
                       erent value)
   66 00000000         ; = bit 0: the bit for whether the button has been pushe
                       d or not
   67 00000000         ; = bit 1: the bit for whether to be in the breathing an
                       imation or not
   68 00000000         ;R9 = holds the location for PORTF_DATA
   69 00000000         
   70 00000000         ;-------------------------------------------------------
                       ----------------------------------------
   71 00000000         Start
   72 00000000         ; TExaS_Init sets bus clock at 80 MHz
   73 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   74 00000004         ; Initialization
   75 00000004 4856            LDR              R0, =SYSCTL_RCGCGPIO_R ;
   76 00000006 6801            LDR              R1, [R0]    ;
   77 00000008 F041 0130       ORR              R1, R1, #0x30 ;   Start up Port
                                                             F and Port E
   78 0000000C 6001            STR              R1, [R0]    ;
   79 0000000E BF00            NOP                          ;
   80 00000010 BF00            NOP                          ;
   81 00000012         ; Configure Port E
   82 00000012 4854            LDR              R0, =GPIO_PORTE_DIR_R ;
   83 00000014 6801            LDR              R1, [R0]    ;
   84 00000016 F041 0101       ORR              R1, R1, #0x01 ;   PE0 is set to
                                                             output (LED)
   85 0000001A F021 0112       BIC              R1, R1, #0x12 ;   PE1,4 are set
                                                             to input (buttons)
                                                            
   86 0000001E 6001            STR              R1, [R0]    ;
   87 00000020 4851            LDR              R0, =GPIO_PORTE_AFSEL_R ;
   88 00000022 6801            LDR              R1, [R0]    ;
   89 00000024 F04F 0100       MOV              R1, #0      ;     Disables the 
                                                            "alternate function
                                                            s" in the port
   90 00000028 6001            STR              R1, [R0]    ;
   91 0000002A 4850            LDR              R0, =GPIO_PORTE_DEN_R ;
   92 0000002C 6801            LDR              R1, [R0]    ;
   93 0000002E F04F 01FF       MOV              R1, #0xFF   ;    1 means enable
                                                             digital I/O
   94 00000032 6001            STR              R1, [R0]    ;
   95 00000034         ; Configure Port F
   96 00000034 494E            LDR              R1, =GPIO_PORTF_LOCK_R ;  2) un
                                                            lock the lock regis
                                                            ter
   97 00000036 484F            LDR              R0, =GPIO_LOCK_KEY ;  unlock GP
                                                            IO Port F Commit Re
                                                            gister
   98 00000038 6008            STR              R0, [R1]    ;
   99 0000003A 494F            LDR              R1, =GPIO_PORTF_CR_R ;     enab
                                                            le commit for Port 
                                                            F
  100 0000003C F04F 00FF       MOV              R0, #0xFF   ;                1 
                                                            means allow access



ARM Macro Assembler    Page 4 


  101 00000040 6008            STR              R0, [R1]    ;
  102 00000042 494E            LDR              R1, =GPIO_PORTF_DIR_R ;    5) s
                                                            et direction regist
                                                            er
  103 00000044 F04F 000E       MOV              R0,#0x0E    ;
  104 00000048 6008            STR              R0, [R1]    ;
  105 0000004A 494D            LDR              R1, =GPIO_PORTF_AFSEL_R ;  6) r
                                                            egular port functio
                                                            n
  106 0000004C F04F 0000       MOV              R0, #0      ;                  
                                                             0 means disable al
                                                            ternate function
  107 00000050 6008            STR              R0, [R1]    ;
  108 00000052 494C            LDR              R1, =GPIO_PORTF_PUR_R ;    pull
                                                            -up resistors for P
                                                            F4,PF0
  109 00000054 F04F 0011       MOV              R0, #0x11   ;                1)
                                                            enable for negative
                                                             logic
  110 00000058 6008            STR              R0, [R1]    ;
  111 0000005A 494B            LDR              R1, =GPIO_PORTF_DEN_R ;    7) e
                                                            nable Port F digita
                                                            l port
  112 0000005C F04F 00FF       MOV              R0, #0xFF   ;                1 
                                                            means enable digita
                                                            l I/O
  113 00000060 6008            STR              R0, [R1]    ;
  114 00000062         ; Setting up variables
  115 00000062         Configure
  116 00000062 484A            LDR              R0, =GPIO_PORTE_DATA_R ; R0 hol
                                                            ds the location for
                                                             the Data location 
                                                            of Port E
  117 00000064 F8DF 9128       LDR              R9, =GPIO_PORTF_DATA_R ; R9 hol
                                                            ds the location for
                                                             the Data location 
                                                            of Port F
  118 00000068 4A4A            LDR              R2, =MAX_DELAY ;
  119 0000006A F04F 0305       MOV              R3, #5      ;
  120 0000006E FBB2 F4F3       UDIV             R4, R2, R3  ;   The increments 
                                                            of the delay
  121 00000072 F04F 0304       MOV              R3, #4      ;
  122 00000076 FB04 F503       MUL              R5, R4, R3  ;    Default: off f
                                                            or 4/5 of 80Hz
  123 0000007A F04F 0301       MOV              R3, #1      ;
  124 0000007E FB04 F603       MUL              R6, R4, R3  ;    Default: on fo
                                                            r 1/5 of 80Hz
  125 00000082 F102 0700       ADD              R7, R2, #0  ;
  126 00000086         
  127 00000086 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  128 00000088         
  129 00000088         loop
  130 00000088         ; The main loop engine
  131 00000088 F8D9 1000       LDR              R1, [R9]    ;
  132 0000008C         ; If the button is pushed, Start breathing
  133 0000008C F001 0310       AND              R3, R1, #0x10 ;   Check whether
                                                             the button has bee



ARM Macro Assembler    Page 5 


                                                            n pushed or not
  134 00000090 2B00            CMP              R3, #0x00   ;
  135 00000092 D100            BNE              ifPushed    ;    If SW1 is push
                                                            ed, start the breat
                                                            hing
  136 00000094 E024            B                Breathe_Start ;
  137 00000096         
  138 00000096         ifPushed
  139 00000096 6801            LDR              R1, [R0]    ;    <- R1 holds th
                                                            e data from the dat
                                                            a register 
  140 00000098         ; If the button is pushed, set PE4 to 1
  141 00000098 F001 0302       AND              R3, R1, #0x02 ;   Check whether
                                                             the button has bee
                                                            n pushed or not
  142 0000009C 2B00            CMP              R3, #0x00   ;   If the button i
                                                            s pushed
  143 0000009E D102            BNE              incrementDuty ;
  144 000000A0 F048 0801       ORR              R8, #0x01   ;    <- Set R8 to 1
                                                             since the button w
                                                            as pushed.
  145 000000A4 E00D            B                blink       ;
  146 000000A6         incrementDuty
  147 000000A6         ; Incrementing the duty time
  148 000000A6 F008 0301       AND              R3, R8, #0x01 ;
  149 000000AA 2B01            CMP              R3, #0x01   ;    
  150 000000AC D109            BNE              blink       ;    If the button 
                                                            has been pushed, bu
                                                            t is not being push
                                                            ed
  151 000000AE EBA5 0504       SUB              R5, R5, R4  ;    Decrement the 
                                                            off time
  152 000000B2 4426            ADD              R6, R6, R4  ;    Increment the 
                                                            on time
  153 000000B4 F028 0801       BIC              R8, #0x01   ;
  154 000000B8 2D00            CMP              R5, #0      ;
  155 000000BA D502            BPL              blink       ;    If the the off
                                                             time is < 0 (off <
                                                             0%, on > 100%), re
                                                            set the values to o
                                                            ff = 100%, on = 0%
  156 000000BC 4415            ADD              R5, R5, R2  ;    If off is nega
                                                            tive, reset off tim
                                                            e to max
  157 000000BE F04F 0600       MOV              R6, #0      ;     Reset the on 
                                                            time to 0 (light is
                                                             always off)
  158 000000C2         blink
  159 000000C2         ; Turn off the light and wait
  160 000000C2 F021 0101       BIC              R1, #0x01   ;  
  161 000000C6 6001            STR              R1, [R0]    ;
  162 000000C8 F105 0700       ADD              R7, R5, #0  ;
  163 000000CC F000 F840       BL               delay       ;   Delay the progr
                                                            am for a amount of 
                                                            time specified in R
                                                            7
  164 000000D0         ; Turn on the light and wait
  165 000000D0 F041 0101       ORR              R1, #0x01   ;  
  166 000000D4 6001            STR              R1, [R0]    ;



ARM Macro Assembler    Page 6 


  167 000000D6 F106 0700       ADD              R7, R6, #0  ;
  168 000000DA F000 F839       BL               delay       ;
  169 000000DE         
  170 000000DE E7D3            B                loop
  171 000000E0         ;-------------------------------------------------------
                       ----------------------------------------
  172 000000E0         Breathe_Start
  173 000000E0         ; a subroutine that handles all the breathing functional
                       ity by completly reworking everything
  174 000000E0 B406            PUSH             {r2, r1}    ; save the values o
                                                            f the of R0--R7
  175 000000E2         ; Setting up variables
  176 000000E2 F44F 42BC       LDR              R2, =BREATHE_DELAY_MAX ;
  177 000000E6 F44F 7396       MOV              R3, #300    ;
  178 000000EA FBB2 F4F3       UDIV             R4, R2, R3  ;   The increments 
                                                            of the delay
  179 000000EE F240 1327       MOV              R3, #295    ;
  180 000000F2 FB04 F503       MUL              R5, R4, R3  ;    Default: off f
                                                            or 4/5 of 80Hz
  181 000000F6 F04F 0305       MOV              R3, #5      ;
  182 000000FA FB04 F603       MUL              R6, R4, R3  ;    Default: on fo
                                                            r 1/5 of 80Hz
  183 000000FE F102 0700       ADD              R7, R2, #0  ;
  184 00000102         
  185 00000102         Breathe_loop
  186 00000102         ; The main loop engine
  187 00000102 F8D9 1000       LDR              R1, [R9]    ;    <- R1 holds th
                                                            e data from the dat
                                                            a register
  188 00000106         Breathe_ifPushed
  189 00000106         ; If the button is pushed, Stop breathing
  190 00000106 F001 0310       AND              R3, R1, #0x10 ;   Check whether
                                                             the button has bee
                                                            n pushed or not
  191 0000010A 2B10            CMP              R3, #0x10   ;
  192 0000010C D100            BNE              Breathe_incrementDuty ;
  193 0000010E E01D            B                Breathe_Stop ;
  194 00000110         
  195 00000110         Breathe_incrementDuty
  196 00000110         ; Incrementing the duty time
  197 00000110 EBA5 0504       SUB              R5, R5, R4  ;    Decrement the 
                                                            off time
  198 00000114 4426            ADD              R6, R6, R4  ;    Increment the 
                                                            on time
  199 00000116 2D00            CMP              R5, #0      ;
  200 00000118 D402            BMI              Verse       ;
  201 0000011A D001            BEQ              Verse       ;     Check if we'v
                                                            e stopped or froze 
                                                            the delay of the li
                                                            ght (either R5 or R
                                                            6 reach zero)
  202 0000011C 2E00            CMP              R6, #0      ;
  203 0000011E D506            BPL              Breathe_blink ;
  204 00000120         Verse
  205 00000120 F04F 33FF       MOV              R3, #-1     ;
  206 00000124 FB04 F403       MUL              R4, R4, R3  ;    Once we reach 
                                                            a maximum, down/up 
                                                            or up depending on 
                                                            the scenario



ARM Macro Assembler    Page 7 


  207 00000128 EBA5 0504       SUB              R5, R5, R4  ;    Decrement the 
                                                            off time
  208 0000012C 4426            ADD              R6, R6, R4  ;    Increment the 
                                                            on time
  209 0000012E         Breathe_blink
  210 0000012E         ; Turn off the light and wait
  211 0000012E F021 0101       BIC              R1, #0x01   ;  
  212 00000132 6001            STR              R1, [R0]    ;
  213 00000134 F105 0700       ADD              R7, R5, #0  ;
  214 00000138 F000 F80A       BL               delay       ;   Delay the progr
                                                            am for a amount of 
                                                            time specified in R
                                                            7
  215 0000013C         ; Turn on the light and wait
  216 0000013C F041 0101       ORR              R1, #0x01   ;  
  217 00000140 6001            STR              R1, [R0]    ;
  218 00000142 F106 0700       ADD              R7, R6, #0  ;
  219 00000146 F000 F803       BL               delay       ;
  220 0000014A         
  221 0000014A E7DA            B                Breathe_loop
  222 0000014C         
  223 0000014C         Breathe_Stop
  224 0000014C BCFF            POP              {r0-r7}     ; restore the value
                                                            s of R0--R7
  225 0000014E E79B            B                loop        ;
  226 00000150         ;-------------------------------------------------------
                       ----------------------------------------
  227 00000150         ; a subroutine that loops using the value at R7
  228 00000150         delay
  229 00000150 F04F 0300       MOV              R3, #0      ;
  230 00000154         delayLoop
  231 00000154 429F            CMP              R7, R3      ;   Loop until temp
                                                            orary value R3 reac
                                                            hes R2
  232 00000156 D002            BEQ              delayDone   ;
  233 00000158 F103 0301       ADD              R3, R3, #1  ; 
  234 0000015C E7FA            B                delayLoop   ;
  235 0000015E         delayDone
  236 0000015E 4770            BX               LR          ;
  237 00000160         ;-------------------------------------------------------
                       ----------------------------------------
  238 00000160                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  239 00000160                 END                          ; end of file
              400FE608 
              40024400 
              40024420 
              4002451C 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              40025420 
              40025510 
              4002551C 
              400243FC 
              400253FC 
              001864A8 



ARM Macro Assembler    Page 8 


Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: .text unused
Breathe_Start 000000E0

Symbol: Breathe_Start
   Definitions
      At line 172 in file main.s
   Uses
      At line 136 in file main.s
Comment: Breathe_Start used once
Breathe_Stop 0000014C

Symbol: Breathe_Stop
   Definitions
      At line 223 in file main.s
   Uses
      At line 193 in file main.s
Comment: Breathe_Stop used once
Breathe_blink 0000012E

Symbol: Breathe_blink
   Definitions
      At line 209 in file main.s
   Uses
      At line 203 in file main.s
Comment: Breathe_blink used once
Breathe_ifPushed 00000106

Symbol: Breathe_ifPushed
   Definitions
      At line 188 in file main.s
   Uses
      None
Comment: Breathe_ifPushed unused
Breathe_incrementDuty 00000110

Symbol: Breathe_incrementDuty
   Definitions
      At line 195 in file main.s
   Uses
      At line 192 in file main.s
Comment: Breathe_incrementDuty used once
Breathe_loop 00000102

Symbol: Breathe_loop
   Definitions
      At line 185 in file main.s
   Uses
      At line 221 in file main.s
Comment: Breathe_loop used once
Configure 00000062

Symbol: Configure



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 115 in file main.s
   Uses
      None
Comment: Configure unused
Start 00000000

Symbol: Start
   Definitions
      At line 71 in file main.s
   Uses
      At line 55 in file main.s
Comment: Start used once
Verse 00000120

Symbol: Verse
   Definitions
      At line 204 in file main.s
   Uses
      At line 200 in file main.s
      At line 201 in file main.s

blink 000000C2

Symbol: blink
   Definitions
      At line 158 in file main.s
   Uses
      At line 145 in file main.s
      At line 150 in file main.s
      At line 155 in file main.s

delay 00000150

Symbol: delay
   Definitions
      At line 228 in file main.s
   Uses
      At line 163 in file main.s
      At line 168 in file main.s
      At line 214 in file main.s
      At line 219 in file main.s

delayDone 0000015E

Symbol: delayDone
   Definitions
      At line 235 in file main.s
   Uses
      At line 232 in file main.s
Comment: delayDone used once
delayLoop 00000154

Symbol: delayLoop
   Definitions
      At line 230 in file main.s
   Uses
      At line 234 in file main.s
Comment: delayLoop used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

ifPushed 00000096

Symbol: ifPushed
   Definitions
      At line 138 in file main.s
   Uses
      At line 135 in file main.s
Comment: ifPushed used once
incrementDuty 000000A6

Symbol: incrementDuty
   Definitions
      At line 146 in file main.s
   Uses
      At line 143 in file main.s
Comment: incrementDuty used once
loop 00000088

Symbol: loop
   Definitions
      At line 129 in file main.s
   Uses
      At line 170 in file main.s
      At line 225 in file main.s

17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BREATHE_DELAY_MAX 00005E00

Symbol: BREATHE_DELAY_MAX
   Definitions
      At line 47 in file main.s
   Uses
      At line 176 in file main.s
Comment: BREATHE_DELAY_MAX used once
GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 43 in file main.s
   Uses
      At line 97 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 87 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 116 in file main.s
Comment: GPIO_PORTE_DATA_R used once
GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 91 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 82 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 105 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 42 in file main.s
   Uses
      At line 99 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 117 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 111 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 102 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 108 in file main.s
Comment: GPIO_PORTF_PUR_R used once
MAX_DELAY 001864A8

Symbol: MAX_DELAY
   Definitions
      At line 46 in file main.s
   Uses
      At line 118 in file main.s
Comment: MAX_DELAY used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 44 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 75 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 49 in file main.s
   Uses
      At line 73 in file main.s
Comment: TExaS_Init used once
1 symbol
367 symbols in table
