


ARM Macro Assembler    Page 1 


    1 00000000         ; SysTick.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Provide functions that initialize the SysTick module, 
                       wait at least a
    4 00000000         ; designated number of clock cycles, and wait approximat
                       ely a multiple
    5 00000000         ; of 10 milliseconds using busy wait.  After a power-on-
                       reset, the
    6 00000000         ; LM4F120 gets its clock from the 16 MHz precision inter
                       nal oscillator,
    7 00000000         ; which can vary by +/- 1% at room temperature and +/- 3
                       % across all
    8 00000000         ; temperature ranges.  If you are using this module, you
                        may need more
    9 00000000         ; precise timing, so it is assumed that you are using th
                       e PLL to set
   10 00000000         ; the system clock to 50 MHz.  This matters for the func
                       tion
   11 00000000         ; SysTick_Wait10ms(), which will wait longer than 10 ms 
                       if the clock is
   12 00000000         ; slower.
   13 00000000         ; Daniel Valvano
   14 00000000         ; September 12, 2013
   15 00000000         
   16 00000000         ;  This example accompanies the book
   17 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers",
   18 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2015
   19 00000000         ;  Program 2.11, Section 2.6
   20 00000000         ;
   21 00000000         ;Copyright 2015 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   22 00000000         ;   You may use, edit, run or distribute this file
   23 00000000         ;   as long as the above copyright notice remains
   24 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   25 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   26 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   27 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   28 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   29 00000000         ;For more information about my classes, my research, and
                        my books, see
   30 00000000         ;http://users.ece.utexas.edu/~valvano/
   31 00000000         
   32 00000000 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   33 00000000 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   34 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   35 00000000 00010000 
                       NVIC_ST_CTRL_COUNT



ARM Macro Assembler    Page 2 


                               EQU              0x00010000  ; Count flag
   36 00000000 00000004 
                       NVIC_ST_CTRL_CLK_SRC
                               EQU              0x00000004  ; Clock Source
   37 00000000 00000002 
                       NVIC_ST_CTRL_INTEN
                               EQU              0x00000002  ; Interrupt enable
   38 00000000 00000001 
                       NVIC_ST_CTRL_ENABLE
                               EQU              0x00000001  ; Counter mode
   39 00000000 00FFFFFF 
                       NVIC_ST_RELOAD_M
                               EQU              0x00FFFFFF  ; Counter load valu
                                                            e
   40 00000000         
   41 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   42 00000000                 THUMB
   43 00000000                 EXPORT           SysTick_Init
   44 00000000                 EXPORT           SysTick_Wait
   45 00000000                 EXPORT           SysTick_Wait10ms
   46 00000000                 EXPORT           Debug_Init
   47 00000000         
   48 00000000         ;Debuggin variables
   49 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    data_capture
                               SPACE            50          ; Array of 50 8-byt
                                                            e numbers
   50 00000032 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    time_capture
                               SPACE            200         ; Array of 50 32-by
                                                            te numbers
   51 000000FA         
   52 000000FA         ;R10 = data_capture pointer
   53 000000FA         ;R11 = time_capture pointer
   54 000000FA         
   55 000000FA         ;------------SysTick_Init------------
   56 000000FA         ; Initialize SysTick with busy wait running at bus clock



ARM Macro Assembler    Page 4 


                       .
   57 000000FA         ; Input: none
   58 000000FA         ; Output: none
   59 000000FA         ; Modifies: R0, R1
   60 000000FA         SysTick_Init
   61 000000FA         ; disable SysTick during setup
   62 000000FA 492F            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
   63 000000FC F04F 0000       MOV              R0, #0      ; R0 = 0
   64 00000100 6008            STR              R0, [R1]    ; [R1] = R0 = 0
   65 00000102         ; maximum reload value
   66 00000102 492E            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_R
   67 00000104 482E            LDR              R0, =NVIC_ST_RELOAD_M ;      ; 
                                                            R0 = NVIC_ST_RELOAD
                                                            _M
   68 00000106 6008            STR              R0, [R1]    ; [R1] = R0 = NVIC_
                                                            ST_RELOAD_M
   69 00000108         ; any write to current clears it
   70 00000108 492E            LDR              R1, =NVIC_ST_CURRENT_R ; R1 = &
                                                            NVIC_ST_CURRENT_R
   71 0000010A F04F 0000       MOV              R0, #0      ; R0 = 0
   72 0000010E 6008            STR              R0, [R1]    ; [R1] = R0 = 0
   73 00000110         ; enable SysTick with core clock
   74 00000110 4929            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
   75 00000112         ; R0 = ENABLE and CLK_SRC bits set
   76 00000112 F04F 0005       MOV              R0, #(NVIC_ST_CTRL_ENABLE+NVIC_
ST_CTRL_CLK_SRC)
   77 00000116 6008            STR              R0, [R1]    ; [R1] = R0 = (NVIC
                                                            _ST_CTRL_ENABLE|NVI
                                                            C_ST_CTRL_CLK_SRC)
   78 00000118 4770            BX               LR          ; return
   79 0000011A         
   80 0000011A         ;------------SysTick_Wait------------
   81 0000011A         ; Time delay using busy wait.
   82 0000011A         ; Input: R0  delay parameter in units of the core clock 
                       (units of 12.5 nsec for 80 MHz clock)
   83 0000011A         ; Output: none
   84 0000011A         ; Modifies: R0, R1, R3
   85 0000011A         SysTick_Wait
   86 0000011A 4928            LDR              R1, =NVIC_ST_RELOAD_R ; R1 = &N
                                                            VIC_ST_RELOAD_R
   87 0000011C F1A0 0001       SUB              R0, #1
   88 00000120 6008            STR              R0, [R1]    ;delay-1;  // numbe
                                                            r of counts to wait
                                                            
   89 00000122 4925            LDR              R1, =NVIC_ST_CTRL_R ; R1 = &NVI
                                                            C_ST_CTRL_R
   90 00000124         SysTick_Wait_loop
   91 00000124 680B            LDR              R3, [R1]    ; R3 = NVIC_ST_CTRL
                                                            _R
   92 00000126 F413 3380       ANDS             R3, R3, #0x00010000 
                                                            ; Count set?
   93 0000012A D0FB            BEQ              SysTick_Wait_loop
   94 0000012C 4770            BX               LR          ; return
   95 0000012E         
   96 0000012E         ;------------SysTick_Wait10ms------------
   97 0000012E         ; Time delay using busy wait.  This assumes 50 MHz clock



ARM Macro Assembler    Page 5 


                       
   98 0000012E         ; Input: R0  number of times to wait 10 ms before return
                       ing
   99 0000012E         ; Output: none
  100 0000012E         ; Modifies: R0
  101 0000012E 000C3500 
                       DELAY10MS
                               EQU              800000      ; clock cycles in 1
                                                            0 ms (assumes 80 MH
                                                            z clock)
  102 0000012E         SysTick_Wait10ms
  103 0000012E B510            PUSH             {R4, LR}    ; save current valu
                                                            e of R4 and LR
  104 00000130 0004            MOVS             R4, R0      ; R4 = R0 = remaini
                                                            ngWaits
  105 00000132 D004            BEQ              SysTick_Wait10ms_done 
                                                            ; R4 == 0, done
  106 00000134         SysTick_Wait10ms_loop
  107 00000134 4824            LDR              R0, =DELAY10MS ; R0 = DELAY10MS
                                                            
  108 00000136 F7FF FFFE       BL               SysTick_Wait ; wait 10 ms
  109 0000013A 1E64            SUBS             R4, R4, #1  ; R4 = R4 - 1; rema
                                                            iningWaits--
  110 0000013C D8FA            BHI              SysTick_Wait10ms_loop ; if(R4 >
                                                             0), wait another 1
                                                            0 ms
  111 0000013E         SysTick_Wait10ms_done
  112 0000013E E8BD 4010       POP              {R4, LR}    ; restore previous 
                                                            value of R4 and LR
  113 00000142 4770            BX               LR          ; return
  114 00000144         
  115 00000144         ;-------DEBUG_Init--------------------------------------
                       ----------------------------------------
  116 00000144         ;Initiliazing Debug Dump
  117 00000144         Debug_Init
  118 00000144 F8DF A084       LDR              R10, =data_capture
  119 00000148 F8DF B084       LDR              R11, =time_capture 
                                                            ;  Created pointers
                                                            
  120 0000014C B403            PUSH             {R0, R1}
  121 0000014E B40C            PUSH             {R2, R3}
  122 00000150 F04F 0008       MOV              R0, #0x08   ;  8 bits in data_c
                                                            apture
  123 00000154 F04F 0132       MOV              R1, #50     ;
  124 00000158         
  125 00000158         setting_data_capture
  126 00000158 F1A1 0101       SUB              R1,R1, #0x01
  127 0000015C F04F 02FF       MOV              R2, #0xFF   ;
  128 00000160 F8CA 2000       STR              R2, [R10]
  129 00000164 4482            ADD              R10, R10, R0
  130 00000166 2900            CMP              R1, #0x0    ;
  131 00000168 D1F6            BNE              setting_data_capture
  132 0000016A         
  133 0000016A F04F 0132       MOV              R1, #50     ;
  134 0000016E F04F 0204       MOV              R2, #0x04   ;
  135 00000172 FB00 F002       MUL              R0,R0, R2   ;
  136 00000176         setting_time_capture
  137 00000176 F04F 0201       MOV              R2, #0x01   ;
  138 0000017A EBA1 0102       SUB              R1,R1, R2   ;



ARM Macro Assembler    Page 6 


  139 0000017E F04F 02FF       MOV              R2, #0xFF   ;
  140 00000182 F8CA 2000       STR              R2, [R10]
  141 00000186 4482            ADD              R10, R10, R0
  142 00000188 2900            CMP              R1, #0x0    ;
  143 0000018A D1F4            BNE              setting_time_capture
  144 0000018C         
  145 0000018C F8DF A03C       LDR              R10, =data_capture
  146 00000190 F8DF B03C       LDR              R11,=time_capture
  147 00000194 BC0C            POP              {R2, R3}
  148 00000196 BC03            POP              {R0, R1}
  149 00000198 4770            BX               LR
  150 0000019A         
  151 0000019A         ;-------DEBUG_CAPTURE-----------------------------------
                       ----------------------------------------
  152 0000019A         ;saves one data point
  153 0000019A         Debug_Capture
  154 0000019A B403            PUSH             {R0,R1}
  155 0000019C 480D            LDR              R0, =GPIO_PORTE_DATA_R
  156 0000019E F000 0003       AND              R0, R0, #0x03 ;  Capturing Pins
                                                             E0 and E1
  157 000001A2 4908            LDR              R1, =NVIC_ST_CURRENT_R 
                                                            ; Capturing Time
  158 000001A4 F8CA 0000       STR              R0, [R10]
  159 000001A8 F8CB 1000       STR              R1, [R11]
  160 000001AC F10A 0A01       ADD              R10, R10, #0x01
  161 000001B0 F10B 0B01       ADD              R11, R11, #0x01
  162 000001B4 BC03            POP              {R0,R1}
  163 000001B6 4770            BX               LR
  164 000001B8         
  165 000001B8         
  166 000001B8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  167 000001B8                 END                          ; end of file
              E000E010 
              E000E014 
              00FFFFFF 
              E000E018 
              000C3500 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\systic
k.d -o.\systick.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\
ARM\Inc\Luminary --predefine="__EVAL SETA 1" --list=.\systick.lst SysTick.s
